{"ast":null,"code":"var _jsxFileName = \"D:\\\\PersonalProjects\\\\gymtracker\\\\frontend\\\\src\\\\Day.js\";\nimport React, { Component } from 'react';\nimport './Day.css';\nimport WorkoutModal from './WorkoutModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst workoutIcons = {\n  arms: '💪',\n  chest: '🏋️',\n  back: '🔙',\n  shoulders: '🏋️‍♂️',\n  legs: '🦵'\n};\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = () => {\n      if (this.state.workoutType !== null) {\n        this.setState({\n          workoutType: null\n        });\n      } else {\n        this.setState({\n          isModalOpen: true\n        });\n      }\n    };\n    this.handleModalClose = () => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n    this.handleWorkoutSave = workoutType => {\n      const date = new Date();\n      this.setState({\n        workoutType\n      });\n\n      // Call the parent's update function\n      if (this.props.onWorkoutUpdate) {\n        this.props.onWorkoutUpdate(workoutType);\n      }\n      fetch('http://localhost:8181/gym/setWorkout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          year: date.getFullYear(),\n          month: date.getMonth(),\n          day: date.getDate(),\n          workoutType\n        })\n      }).then(res => res.text()).then(data => console.log(data)).catch(error => console.error('Error saving workout:', error));\n    };\n    this.state = {\n      workoutType: null,\n      isModalOpen: false\n    };\n  }\n  render() {\n    const {\n      workoutType,\n      isModalOpen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"button\",\n        onClick: this.handleButtonClick,\n        className: workoutType ? 'has-workout' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"dateText\",\n          children: this.props.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), workoutType && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"workout-icon\",\n          title: workoutType,\n          children: workoutIcons[workoutType]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorkoutModal, {\n        isOpen: isModalOpen,\n        onClose: this.handleModalClose,\n        onSave: this.handleWorkoutSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Day;","map":{"version":3,"names":["React","Component","WorkoutModal","jsxDEV","_jsxDEV","Fragment","_Fragment","workoutIcons","arms","chest","back","shoulders","legs","Day","constructor","props","handleButtonClick","state","workoutType","setState","isModalOpen","handleModalClose","handleWorkoutSave","date","Date","onWorkoutUpdate","fetch","method","headers","body","JSON","stringify","year","getFullYear","month","getMonth","day","getDate","then","res","text","data","console","log","catch","error","render","children","id","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","title","isOpen","onClose","onSave"],"sources":["D:/PersonalProjects/gymtracker/frontend/src/Day.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Day.css';\r\nimport WorkoutModal from './WorkoutModal';\r\n\r\nconst workoutIcons = {\r\n  arms: '💪',\r\n  chest: '🏋️',\r\n  back: '🔙',\r\n  shoulders: '🏋️‍♂️',\r\n  legs: '🦵'\r\n};\r\n\r\nclass Day extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      workoutType: null,\r\n      isModalOpen: false\r\n    };\r\n  }\r\n\r\n  handleButtonClick = () => {\r\n    if (this.state.workoutType !== null) {\r\n      this.setState({workoutType: null})\r\n\r\n    } else {\r\n      this.setState({ isModalOpen: true });\r\n    }\r\n  }\r\n\r\n  handleModalClose = () => {\r\n    this.setState({ isModalOpen: false });\r\n  }\r\n\r\n  handleWorkoutSave = (workoutType) => {\r\n    const date = new Date();\r\n    this.setState({ workoutType });\r\n    \r\n    // Call the parent's update function\r\n    if (this.props.onWorkoutUpdate) {\r\n      this.props.onWorkoutUpdate(workoutType);\r\n    }\r\n\r\n    fetch('http://localhost:8181/gym/setWorkout', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        year: date.getFullYear(),\r\n        month: date.getMonth(),\r\n        day: date.getDate(),\r\n        workoutType\r\n      })\r\n    })\r\n      .then(res => res.text())\r\n      .then(data => console.log(data))\r\n      .catch(error => console.error('Error saving workout:', error));\r\n  }\r\n\r\n  render() {\r\n    const { workoutType, isModalOpen } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <button id=\"button\" onClick={this.handleButtonClick} className={workoutType ? 'has-workout' : ''}>\r\n          <p id=\"dateText\">{this.props.date}</p>\r\n          {workoutType && (\r\n            <span className=\"workout-icon\" title={workoutType}>\r\n              {workoutIcons[workoutType]}\r\n            </span>\r\n          )}\r\n        </button>\r\n        <WorkoutModal\r\n          isOpen={isModalOpen}\r\n          onClose={this.handleModalClose}\r\n          onSave={this.handleWorkoutSave}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Day;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}